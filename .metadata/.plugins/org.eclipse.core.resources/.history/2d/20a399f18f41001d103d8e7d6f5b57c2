package com.auction.Dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.auction.bean.Item;
import com.auction.bean.Seller;
import com.auction.exceptions.SellerException;
import com.auction.utility.DBUtil;


public class SellerDaoImpl implements SellerDao{

	@Override
	public String registerSeller(Seller seller) {
	    String message = "Seller Not Inserted";
	    
	try(Connection conn = DBUtil.ProvideConnection()) {
	PreparedStatement ps = 
	conn.prepareStatement("Insert into Seller(Sname,Semail,Spassword) values(?,?,?)");
	  
	ps.setString(1, seller.getSname());
	ps.setString(2, seller.getSemail());
	ps.setString(3, seller.getSpassword());
	
	int x = ps.executeUpdate();
     if(x>0) {	
    	 message = "Seller Registered Successfully";
    	 
     }	
	 
	} catch (SQLException e) {
		message = e.getMessage();
	}
	      
		return message;
	}

	@Override
	public Seller loginSeller(String username, String password) throws SellerException {
	    Seller seller = null;
	    
	    
	    try (Connection conn = DBUtil.ProvideConnection()){
	    PreparedStatement ps = 
	    conn.prepareStatement("Select * from Seller Where Semail = ? AND Spassword = ?");
	    
	    ps.setString(1, username);
	    ps.setString(2, password);

	    ResultSet rs = ps.executeQuery();
	    
	    if(rs.next()) {
	    	int id = rs.getInt("SellerID");
	    	String name = rs.getString("Sname");
	    	String email = rs.getString("Semail");
	    	String pass = rs.getString("Spassword");
	    	seller = new Seller(id, name, email, pass);
	    	
	    }else {
	      throw new SellerException("Invalid Username or Password");
	    }
	    
	    
		} catch (SQLException e) {
		  throw new SellerException(e.getMessage());
		}
	
	    
		return seller;
	}

	@Override
	public String AddItemToSell(Item item) {
         String message = "Item not Added";
         try (Connection conn = DBUtil.ProvideConnection()){
         PreparedStatement ps = 
         conn.prepareStatement("Insert into Item(IName,Price,Quantity,Category,SellerID) values(?,?,?,?,?)");
         ps.setString(1, item.getIName());
     	 ps.setInt(2, item.getPrice());
     	 ps.setInt(3, item.getQuantity());
     	 ps.setString(4, item.getCategory());
    	 ps.setInt(5, item.getSellerID());
    	 
    	 int x = ps.executeUpdate();
         if(x>0) {	
        	 message = "Item Added Successfully";
         }	
    	} catch (SQLException e) {
    		message = e.getMessage();
    	}
         return message;
         
	}

	@Override
	public String removeItem(Item item) {
		String remove = null;
		try(Connection conn = DBUtil.ProvideConnection()){
			PreparedStatement ps =
			conn.prepareStatement("DELETE from Item Where ItemId = ?");
			ps.setInt(1, item.getItemId());
			
			int x = ps.executeUpdate();
			if(x>0) {
				System.out.println("Item Removed Successfully");
			}else {
				System.out.println("Item Does not Exist");
			}
			
		} catch (SQLException e) {
			remove = e.getMessage();
		}

		return remove;
	}
	

}
